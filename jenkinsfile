pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'electricity-bill-payment-app'
        DOCKER_REGISTRY = 'your-docker-registry-url'
        KUBE_NAMESPACE = 'electricity-payment-prod'
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out code...'
                git branch: 'master', url: 'https://github.com/AtangaEmma/Electricity-Bill-Payment.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Building application...'
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                sh './run-tests.sh' // Ensure the script runs all tests
            }
        }

        stage('Code Quality Check') {
            steps {
                echo 'Running code quality checks...'
                sh 'sonar-scanner' // Configure SonarQube in Jenkins
            }
        }

        stage('Push to Docker Registry') {
            steps {
                echo 'Pushing Docker image to registry...'
                withCredentials([usernamePassword(credentialsId: 'docker-credentials-id', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo $DOCKER_PASS | docker login $DOCKER_REGISTRY -u $DOCKER_USER --password-stdin
                        docker tag $DOCKER_IMAGE $DOCKER_REGISTRY/$DOCKER_IMAGE:latest
                        docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:latest
                    '''
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
                sh '''
                    kubectl apply -f k8s/staging-deployment.yaml
                    kubectl rollout status deployment/electricity-payment-staging
                '''
            }
        }

        stage('Approval for Production') {
            steps {
                input message: 'Approve deployment to production?'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production environment...'
                sh '''
                    kubectl apply -f k8s/production-deployment.yaml
                    kubectl rollout status deployment/electricity-payment-prod
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
